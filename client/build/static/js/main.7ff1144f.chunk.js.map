{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","response","data","errors","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","useContext","total","map","amount","reduce","acc","item","toFixed","IncomeExpenses","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ff1144f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n\nexport default Header\n","export default (state, action) => {\n    switch (action.type) {\n\n        case \"GET_TRANSACTIONS\":\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n\n        case \"DELETE_TRANSACTION\":\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n            }\n\n        case \"ADD_TRANSACTION\":\n            return {\n                ...state,\n                transactions: [...state.transactions, action.payload]\n            }\n            \n        case \"TRANSACTION_ERROR\":\n            return {\n                ...state,\n                error: action.payload\n            }    \n\n        default:\n            return state;\n    }\n}","import React, {\n    createContext,\n    useReducer\n} from \"react\";\nimport axios from \"axios\";\nimport AppReducer from \"./AppReducer\";\n\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n};\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    async function getTransactions() {\n        try {\n            const response = await axios.get(\"/api/v1/transactions\");\n            dispatch({\n                type: \"GET_TRANSACTIONS\",\n                payload: response.data.data\n            })\n        }\n        catch (err) {\n            dispatch({\n                type: \"TRANSACTION_ERROR\",\n                payload: err.response.data.errors\n            })\n        }\n    }\n\n    async function deleteTransaction(id) {\n        try {\n            await axios.delete(`/api/v1/transactions/${id}`);\n            dispatch({\n                type: \"DELETE_TRANSACTION\",\n                payload: id\n            });\n        }\n        catch (err) {\n            dispatch({\n                type: \"TRANSACTION_ERROR\",\n                payload: err.response.data.errors\n            })\n        }\n    };\n\n    async function addTransaction(transaction) {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n        try {\n            const response = await axios.post(\"/api/v1/transactions\", transaction, config);\n            dispatch({\n                type: \"ADD_TRANSACTION\",\n                payload: response.data.data\n            })\n        }\n        catch (err) {\n            dispatch({\n                type: \"TRANSACTION_ERROR\",\n                payload: err\n            })\n        }\n    }\n\n    return (<GlobalContext.Provider value = {{\n        transactions: state.transactions,\n        error: state.error,\n        loading: state.loading,\n        getTransactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n        {children}\n    </GlobalContext.Provider>)\n}","export function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, {Fragment, useContext} from 'react';\nimport {GlobalContext} from \"../context/GlobalState\";\nimport {numberWithCommas} from \"../utils/format\";\n\nconst Balance = () => {\n\n    // define some variables\n    const {transactions} = useContext(GlobalContext);\n    const amounts = transactions !== null && transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <Fragment>\n            <h4>Your Balance</h4>\n            <h1 id = \"balance\">${numberWithCommas(total)}</h1>\n        </Fragment>\n    )\n}\n\nexport default Balance\n","import React, { useContext } from 'react';\nimport {GlobalContext} from \"../context/GlobalState\";\nimport {numberWithCommas} from \"../utils/format\";\n\nconst IncomeExpenses = () => {\n\n    // define some variables\n    const {transactions} = useContext(GlobalContext);\n    const amount = transactions.map(transaction => transaction.amount);\n    const income = amount.filter(item => item > 0).reduce((acc, item) => (acc += item), 0).toFixed(2);\n    const expense = (amount.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1).toFixed(2);\n\n    return (\n        <div className = \"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p id = \"money-plus\" className = \"money plus\">{numberWithCommas(income)}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p id = \"money-minus\" className = \"money minus\">{numberWithCommas(expense)}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default IncomeExpenses\n","import React, { useContext } from 'react';\nimport {GlobalContext} from \"../context/GlobalState\";\nimport {numberWithCommas} from \"../utils/format\";\n\nconst Transaction = ({transaction}) => {\n\n    // define some variables\n    const {deleteTransaction} = useContext(GlobalContext);\n    const sign = transaction.amount < 0 ? \"-\" : \"+\";\n\n    return (\n        <li className = {transaction.amount < 0 ? \"minus\" : \"plus\"}>\n            {transaction.text} <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span><button className = \"delete-btn\" onClick = {() => deleteTransaction(transaction._id)}>x</button>\n        </li>\n    )\n}\n\nexport default Transaction\n","import React, {Fragment, useContext, useEffect} from 'react';\nimport Transaction from \"./Transaction\";\nimport {GlobalContext} from \"../context/GlobalState\";\n\nconst TransactionList = () => {\n\n    const {transactions, getTransactions} = useContext(GlobalContext);\n\n    useEffect(() => {\n        getTransactions();\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <Fragment>\n            <h3>History</h3>\n            <ul id = \"list\" className = \"list\">\n                {transactions.map(transaction => (\n                    <Transaction key = {transaction._id} transaction = {transaction} />\n                ))}\n            </ul>\n        </Fragment>\n    )\n}\n\nexport default TransactionList\n","import React, {Fragment, useContext, useState} from 'react';\nimport {GlobalContext} from \"../context/GlobalState\";\n\nconst AddTransaction = () => {\n\n    // define some variables\n    const [text, setText] = useState(\"\");\n    const [amount, setAmount] = useState(0);\n    const {addTransaction} = useContext(GlobalContext);\n\n    // define some functions\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const newTransaction = {\n            id: Math.floor(Math.random() * 100000000),\n            text,\n            amount: +amount\n        };\n        addTransaction(newTransaction);\n        setText(\"\");\n        setAmount(0);\n    }\n\n    return (\n        <Fragment>\n            <h3>Add new transaction</h3>\n            <form onSubmit = {onSubmit}>\n                <div className = \"form-control\">\n                    <label htmlFor = \"text\">Text</label>\n                    <input type = \"text\" value = {text} onChange = {e => setText(e.target.value)} placeholder = \"Enter text...\" />\n                </div>\n                <div className = \"form-control\">\n                    <label htmlFor = \"amount\">Amount <br/> (negative - expense, positive - income)</label>\n                    <input type = \"number\" value = {amount} onChange = {e => setAmount(e.target.value)} placeholder = \"Enter amount...\" />\n                </div>\n                <button className = \"btn\">Add transaction</button>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default AddTransaction\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport {GlobalProvider} from \"./context/GlobalState\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className = \"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}